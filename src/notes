
function draw(){
    background(0);

    var spectrum = gg.fft.analyze();
    noStroke();
    fill(0,255,0); // spectrum is green
    for (var i = 0; i< spectrum.length; i++){
        var x = map(i, 0, spectrum.length, 0, width);
        var h = -height + map(spectrum[i], 0, 255, height, 0);
        rect(x, height, width / spectrum.length, h )
    }

    var waveform = gg.fft.waveform();
    noFill();
    beginShape();
    stroke(255,0,0); // waveform is red
    strokeWeight(1);
    for (var i = 0; i< waveform.length; i++){
        var x = map(i, 0, waveform.length, 0, width);
        var y = map( waveform[i], -1, 1, 0, height);
        vertex(x,y);
    }
    endShape();

    text('click to play/pause', 4, 10);
}






        // var object = new THREE.Mesh( new THREE.DodecahedronGeometry( 2 , 2), new THREE.MeshPhongMaterial( { color: 0xffffff, side: THREE.DoubleSide } ) );
        // // object.position.x = 1;
        // object.scale.set(50,50,50);
        // // object.geometry.computeVertexNormals();
        // var object2 = new THREE.Mesh( new THREE.DodecahedronGeometry( 2 , 2), new THREE.MeshPhongMaterial( { color: 0xffffff, side: THREE.DoubleSide } ) );
        // object2.position.x = 5;
        // // object2.scale.set(50,50,50);
        // object.add(object2);
        // gg.scene.add(object);
        // object2.geometry.computeVertexNormals();
        // gg.push(object);

        // var geom = new THREE.DodecahedronGeometry( 1 , 2);

        // THREE.GeometryUtils.merge(geom, new THREE.TorusKnotGeometry( 1, .6, 10, 20 ));



    // gg.anim = generators.generateSpine(spineData,false);

    // gg.anim.position.y = -200;
    // gg.anim.position.z = -150;
    // gg.scene.add(gg.anim);
